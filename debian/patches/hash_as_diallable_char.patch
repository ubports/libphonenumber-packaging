Description: Added hash as a diallable char
Forwarded: https://github.com/googlei18n/libphonenumber/pull/1312
Author: Tiago Salem Herrmann <tiago.herrmann@canonical.com>
Index: libphonenumber-7.1.0-4ubuntu1/cpp/src/phonenumbers/phonenumberutil.cc
===================================================================
--- libphonenumber-7.1.0-4ubuntu1.orig/cpp/src/phonenumbers/phonenumberutil.cc
+++ libphonenumber-7.1.0-4ubuntu1/cpp/src/phonenumbers/phonenumberutil.cc
@@ -288,6 +288,7 @@ class PhoneNumberRegExpsAndMappings {
   void InitializeMapsAndSets() {
     diallable_char_mappings_.insert(std::make_pair('+', '+'));
     diallable_char_mappings_.insert(std::make_pair('*', '*'));
+    diallable_char_mappings_.insert(std::make_pair('#', '#'));
     // Here we insert all punctuation symbols that we wish to respect when
     // formatting alpha numbers, as they show the intended number groupings.
     all_plus_number_grouping_symbols_.insert(
Index: libphonenumber-7.1.0-4ubuntu1/cpp/test/phonenumbers/phonenumberutil_test.cc
===================================================================
--- libphonenumber-7.1.0-4ubuntu1.orig/cpp/test/phonenumbers/phonenumberutil_test.cc
+++ libphonenumber-7.1.0-4ubuntu1/cpp/test/phonenumbers/phonenumberutil_test.cc
@@ -2411,9 +2411,9 @@ TEST_F(PhoneNumberUtilTest, NormaliseStr
 }
 
 TEST_F(PhoneNumberUtilTest, NormaliseStripNonDiallableCharacters) {
-  string input_number("03*4-56&+a#234");
+  string input_number("03*4-56&+1a#234");
   NormalizeDiallableCharsOnly(&input_number);
-  static const string kExpectedOutput("03*456+234");
+  static const string kExpectedOutput("03*456+1#234");
   EXPECT_EQ(kExpectedOutput, input_number)
       << "Conversion did not correctly remove non-diallable characters";
 }
